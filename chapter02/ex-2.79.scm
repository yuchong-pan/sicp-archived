(define (install-equ?-package)
  (put 'equ? '(integer integer) =)
  (put 'equ? '(rational rational) (lambda (x y)
                                    (let ((nx (car x))
                                          (dx (cdr x))
                                          (ny (car y))
                                          (dy (cdr y)))
                                      (and (= nx ny) (= dx dy)))))
  (put 'equ? '(real real) =)
  (put 'equ? '(complex complex) (lambda (x y)
                                  (and (= (real-part x) (real-part y))
                                       (= (imag-part x) (imag-part y)))))
  'done)
(define (equ? x y)
  (apply-generic 'equ? x y))
