(define (product term a next b)
  (if (> a b)
      1
      (* (term a)
         (product term (next a) next b))))
(define (factorial n)
  (product identity 1 inc n))
(define (identity x)
  x)
(define (inc x)
  (+ x 1))
(define (approximation-to-pi n)
  (* 8. n (/ (product square 4 inc-two (- n 2))
             (product square 3 inc-two (- n 1)))))
(define (square x)
  (* x x))
(define (inc-two x)
  (+ x 2))
(define pi (approximation-to-pi 100000))
(define (product-iter term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a) (* result (term a)))))
  (iter a 1))
