(define (make-table)
  (let ((local-table (list '*table*)))
    (define (assoc records keys)
      (cond ((null? records) false)
	    ((equal? keys (caar records)) (car records))
	    (else (assoc (cdr records) keys))))
    (define (lookup . keys)
      (let ((record (assoc (cdr local-table) keys)))
	(if record
	    (cdr record)
	    false)))
    (define (insert! value . keys)
      (let ((record (assoc (cdr local-table) keys)))
	(if record
	    (set-cdr! record value)
	    (set-cdr! local-table
		      (cons (cons keys value)
			    (cdr local-table)))))
      'ok)
    (define (dispatch m)
      (cond ((eq? m 'lookup-proc) lookup)
	    ((eq? m 'insert-proc!) insert!)
	    (else (error "Unknown operation -- TABLE" m))))
    dispatch))
