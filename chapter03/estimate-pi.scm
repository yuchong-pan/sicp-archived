(define (estimate-pi trials)
  (sqrt (/ 6 (monte-carlo trials cesaro-test))))
(define (cesaro-test)
  (= (gcd (rand) (rand)) 1))
(define (monte-carlo trials experiment)
  (define (iter trials-remaining passed)
    (cond ((= trials-remaining 0) (/ passed trials))
          ((experiment) (iter (- trials-remaining 1) (+ passed 1)))
          (else (iter (- trials-remaining 1) passed))))
  (iter trials 0))

;(define random-init 1)
;(define (rand-update x)
;  (remainder (+ (* x x) 3)
;             1000000))
;(define rand
;  (let ((x random-init))
;    (lambda ()
;      (set! x (rand-update x))
;      x)))
(define (rand)
  (random 1000000))
